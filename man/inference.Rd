% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/inference.R
\name{inference}
\alias{inference}
\alias{pl_z_test}
\alias{pd_z_test}
\alias{pl_perm_test}
\title{Statistical Inference with Persistence Landscapes}
\usage{
pl_z_test(
  x,
  y,
  alternative = c("two.sided", "less", "greater"),
  conf.level = 0.95,
  supports = NULL,
  r = 0,
  p = 1
)

pd_z_test(
  x,
  y,
  degree = NULL,
  exact = FALSE,
  xmin = NULL,
  xmax = NULL,
  by = NULL,
  alternative = c("two.sided", "less", "greater"),
  conf.level = 0.95,
  supports = NULL,
  r = 0,
  p = 1
)

pl_perm_test(x, y, p = 1, complete = FALSE, max_iter = 1000L)
}
\arguments{
\item{x, y}{Lists of persistence landscapes.}

\item{alternative}{a character string specifying the alternative
    hypothesis, must be one of \code{"two.sided"} (default),
    \code{"greater"} or \code{"less"}.  You can specify just the initial
    letter.}

\item{conf.level}{confidence level of the interval.}

\item{supports}{List of support intervals for landscape levels.}

\item{r}{Non-negative number; the power of the coefficient \eqn{1/k} in the
indicator linear form.}

\item{p}{Positive integer or infinity; the power used to compute an integral.}

\item{degree}{Non-negative integer; if input is a persistence diagram object,
then the dimension for which to compute a landscape. (For degree \eqn{d},
the \eqn{(d+1)}th matrix in the list will be selected.)}

\item{exact}{Set to \code{TRUE} for exact representation, \code{FALSE} (default) for
discrete.}

\item{xmin, xmax}{Domain thresholds for discrete PL; if not specified, then
taken to be the support of the PL constructed from the data or the internal
values of the 'Rcpp_PersistenceLandscape' object.}

\item{by}{Domain grid diameter for discrete PL; if not specified, then set to
the power of 10 that yields between 100 and 1000 intervals.}

\item{complete}{Logical; whether to compute averages between all combinations
from the two lists of landscapes.}

\item{max_iter}{Positive integer; the maximum number of combinations using
which to estimate the null distance between mean landscapes.}
}
\value{
A list with class \code{"htest"} containing the following components:
\item{\code{statistic}}{
(z-test only) the value of the test statistic.
}
\item{\code{parameter}}{
(z-test only) the degrees of freedom of the test,
\eqn{\lvert x \rvert + \lvert y \rvert - 2}.
}
\item{\code{p.value}}{
the p-value for the test.
}
\item{\code{estimate}}{
the estimated difference difference in means.
}
\item{\code{null.value}}{
the difference in means under the null hypothesis, always \eqn{0}.
}
\item{\code{alternative}}{
a character string describing the alternative hypothesis.
}
\item{\code{method}}{
a character string indicating the test performed.
}
\item{\code{conf.int}}{
(z-test only) a confidence interval for the estimated difference in means.
Depends on the choice of \code{conf.level}.
}
}
\description{
Compute test statistics and conduct null hypothesis tests for
persistence data using persistence landscapes. See Section 3 of Bubenik
(2015).
}
\examples{

# two sets of landscapes from similar but distinctive point clouds
set.seed(711018L)
circlescapes <- replicate(
  6,
  tdaunif::sample_circle(n = rpois(n = 1, lambda = 24)) |>
    ripserr::vietoris_rips(dim = 2L, threshold = 2) |>
    landscape(degree = 1, exact = TRUE)
)
toruscapes <- replicate(
  6,
  tdaunif::sample_torus_tube(n = rpois(n = 1, lambda = 24)) |>
    ripserr::vietoris_rips(dim = 2L, threshold = 2) |>
    landscape(degree = 1, exact = TRUE)
)

# null hypothesis tests
pl_z_test(circlescapes, toruscapes)
pl_perm_test(circlescapes, toruscapes)

\dontrun{
# benchmark one- and two-step computation of indicator-based linear form
bench::mark(
  pl$indicator_form(f, 0, p = 1),
  pl$indicator(f, 0)$integral(p = 1)
)
bench::mark(
  pl$indicator_form(f, r = 1, p = 1),
  pl$indicator(f, r = 1)$integral(p = 1)
)
}
}
\seealso{
\link{arithmetic}, \link{algebra}, \link{analysis} for other landscape functions.
}
