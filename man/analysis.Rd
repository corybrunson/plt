% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/analysis.R
\name{analysis}
\alias{analysis}
\alias{pl_integrate}
\alias{pl_distance}
\alias{pl_dist}
\alias{pl_norm}
\alias{pl_indicator}
\alias{pl_indicator_form}
\title{Norms, Distances, and Integrals of Persistence Landscapes}
\usage{
pl_integrate(pl, p = 1)

pl_distance(pl1, pl2, p = 2)

pl_dist(pl_list, p = 2)

pl_norm(pl, p = 2)

pl_indicator(pl, supports, r = 0)

pl_indicator_form(pl, supports, r = 0, p = 1)
}
\arguments{
\item{pl}{A persistence landscape as returned by \code{landscape()}.}

\item{p}{Positive integer or infinity; the power used to compute an integral.}

\item{pl1, pl2}{Persistence landscapes.}

\item{pl_list}{A list of persistence landscapes.}

\item{supports}{List of support intervals for landscape levels.}

\item{r}{Non-negative number; the power of the coefficient \eqn{1/k} in the
indicator linear form.}
}
\value{
A persistence landscape (an object of S4 class
'Rcpp_PersistenceLandscape'), a real number, or a vector of real numbers.
}
\description{
Calculate distances and perform infinitesimal calculus on
persistence landscapes. See Section 3 of Bubenik (2015).
}
\examples{

# multiply by an indicator function
pd <- data.frame(dim = 1, birth = c(0, 1), death = c(2, 4))
f <- list(c(.5, 3), c(1.5, 2), c(1.75, 2))

# exact landscape
pl_e <- landscape(pd, degree = 1, exact = TRUE)
par(mfcol = c(2L, 2L), mar = c(0, 2, 0, 2))
plot(pl_e, xlim = c(0, 5))
# pl_ef <- pl$indicator(f, 0)
pl_ef <- pl_indicator(pl_e, f)
plot(pl_ef, xlim = c(0, 5))
# discrete landscape
pl_d <- landscape(pd, degree = 1, xmin = 0, xmax = 5, by = .2)
plot(pl_d)
# pl_df <- pl_d$indicator(f, 0)
pl_df <- pl_indicator(pl_d, f)
plot(pl_df, xlim = c(0, 5))
par(mfrow = c(1L, 1L), mar = c(5.1, 4.1, 4.1, 2.1))

# integrate PL multiplied by an indicator function
pl_integrate(pl_d, p = 5)
pl_integrate(pl_df, p = 5)
pl_integrate(pl_e, p = 5)
pl_integrate(pl_ef, p = 5)
}
\seealso{
\link{arithmetic}, \link{algebra}, \link{inference} for other landscape functions.
}
