% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/algebra.R
\name{algebra}
\alias{algebra}
\alias{pl_t}
\alias{pl_vectorize}
\alias{pl_devectorize}
\title{Linear Algebra with Persistence Landscapes}
\usage{
pl_t(pl)

pl_vectorize(pl)

pl_devectorize(x, t_vals = NULL)
}
\arguments{
\item{pl}{A persistence landscape as returned by \code{landscape()}.}

\item{x}{A numeric vector, optionally with an attribute \code{"t_vals"} whose
length divides that of \code{x}, but with no other attributes.}

\item{t_vals}{A numeric vector of equally-spaced values assumed to be the
grid support of a discrete persistence landscape.}
}
\description{
Convert between persistence landscapes and their vectorizations,
and perform linear algebra on vectorized persistence landscapes.
}
\examples{

par(mfrow = c(2L, 2L), mar = rep(.5, 4))

# example PLs
x <- tdaunif::sample_klein_flat(60, ar = 2)
pd <- as_persistence(ripserr::vietoris_rips(x, dim = 1L, threshold = 2))
pl_e <- landscape(pd, degree = 1L, exact = TRUE)
pl_d <- landscape(pd, degree = 1L, exact = FALSE, xmax = 2, by = 0.05)
plot(pl_e, xaxt = "n", yaxt = "n")
plot(pl_d, xaxt = "n", yaxt = "n")

# vectorize PLs
vec_e <- pl_vectorize(pl_e)
vec_d <- pl_vectorize(pl_d)
length(vec_e)
attributes(vec_e)
length(vec_d)
attributes(vec_d)

# de-vectorized PL
pl_e_ <- pl_devectorize(vec_e)
plot(pl_e_, xaxt = "n", yaxt = "n")
pl_d_ <- pl_devectorize(vec_d)
plot(pl_d_, xaxt = "n", yaxt = "n")

par(mfrow = c(1L, 1L), mar = c(5.1, 4.1, 4.1, 2.1))
}
